version: 2.1

orbs:
  # Always take the latest version of the orb, this allows us to
  # run specs against Solidus supported versions only without the need
  # to change this configuration every time a Solidus version is released
  # or goes EOL.
  solidusio_extensions: solidusio/extensions@volatile

commands:
  test-branch:
    description:
      Runs tests for a specific Solidus branch.

    parameters:
      branch:
        type: string
        default: master
      skip_authentication:
        type: boolean
        default: false
      command:
        type: string
        default: |
          cd sandbox
          bundle exec rspec --format progress --format RspecJunitFormatter --out $TEST_RESULTS_PATH
      command_verb:
        type: string
        default: Runs tests

    steps:
      - run:
          name: 'Solidus <<parameters.branch>>: Generate Gemfile.lock'
          command: |
            rm Gemfile

            cat \
              templates/gemfiles/010_sources.rb \
              templates/gemfiles/020_rails.rb \
              templates/gemfiles/030_gemspec.rb \
              templates/gemfiles/040_solidus.rb \
              templates/gemfiles/050_solidus_i18n.rb \
              templates/gemfiles/060_solidus_auth_devise.rb \
              templates/gemfiles/080_solidus_starter_frontend_dependencies.rb \
              templates/gemfiles/100_rspec_rails.rb \
              templates/gemfiles/110_solidus_starter_frontend_rspec_dependencies.rb \
              > Gemfile

            bundle lock
          environment:
            SOLIDUS_BRANCH: <<parameters.branch>>
          when: always
      - restore_cache:
          name: 'Solidus <<parameters.branch>>: Restore Bundler cache'
          keys:
            - gems-v3-ruby-v2-5-6-solidus-<<parameters.branch>>-{{ .Branch }}-sandbox-generated-sandbox-skip-authentication-<<parameters.skip_authentication>>-{{ checksum "Gemfile.lock" }}
            - gems-v3-ruby-v2-5-6-solidus-<<parameters.branch>>-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gems-v3-ruby-v2-5-6-solidus-<<parameters.branch>>-master
            - gems-v3-ruby-v2-5-6-solidus-<<parameters.branch>>-
          when: always
      - run:
          name: 'Solidus <<parameters.branch>>:  Install gems'
          command: |
            bundle config --local path vendor/bundle/<<parameters.branch>>
            bundle install
          environment:
            SOLIDUS_BRANCH: <<parameters.branch>>
          when: always
      - run:
          name: 'Solidus <<parameters.branch>>:  Install sandbox with generated starter frontend'
          command: |
            bin/sandbox --seed=false --sample=false
            cd sandbox
            bundle clean
          environment:
            SANDBOX_BUNDLE_PATH: ../vendor/bundle/<<parameters.branch>>
            SOLIDUS_BRANCH: <<parameters.branch>>
            SANDBOX_SKIP_AUTHENTICATION: <<parameters.skip_authentication>>
          when: always
      - save_cache:
          name: 'Solidus <<parameters.branch>>: Save Bundler cache'
          key: gems-v3-ruby-v2-5-6-solidus-<<parameters.branch>>-{{ .Branch }}-sandbox-generated-sandbox-skip-authentication-<<parameters.skip_authentication>>-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle/<<parameters.branch>>
          when: always
      - run:
          name: '<<parameters.command_verb>> on Solidus <<parameters.branch>>'
          command: <<parameters.command>>
          environment:
            SOLIDUS_BRANCH: <<parameters.branch>>
            TEST_RESULTS_PATH: ../test-results/gems-v3-ruby-v2-5-6-solidus-<<parameters.branch>>/results.xml
          when: always
      - run:
          command: rm -f Gemfile.lock && rm -rf sandbox
          name: 'Solidus <<parameters.branch>>: Clean up'
          when: always

jobs:
  run-specs-with-postgres-skipping-authentication:
    executor: solidusio_extensions/postgres
    steps:
      - checkout
      - test-branch:
          branch: master
          skip_authentication: true
      - solidusio_extensions/store-test-results
  run-specs-with-postgres:
    executor: solidusio_extensions/postgres
    steps:
      - checkout
      - test-branch:
          branch: master
      - solidusio_extensions/store-test-results
  run-specs-with-mysql:
    executor: solidusio_extensions/mysql
    steps:
      - checkout
      - test-branch:
          branch: master
      - solidusio_extensions/store-test-results
  solidus-compare:
    docker:
      - image: circleci/ruby:latest
    steps:
      - checkout
      - run:
          name: Prepare compare diff
          command: bin/solidus_compare > /tmp/solidus_compare_results.diff
      - store_artifacts:
          path: /tmp/solidus_compare_results.diff
          destination: solidus_compare_results.diff
      - run:
          name: Prepare test results
          command: mkdir -p /tmp/test_results && bin/solidus_compare -s > /tmp/test_results/results.xml
      - store_test_results:
          path: /tmp/test_results

workflows:
  "Run specs on supported Solidus versions":
    jobs:
      - run-specs-with-postgres-skipping-authentication
      - run-specs-with-postgres
      - run-specs-with-mysql
      - solidus-compare
  "Weekly run specs against master":
    triggers:
      - schedule:
          cron: "0 0 * * 4" # every Thursday
          filters:
            branches:
              only:
                - master
    jobs:
      - run-specs-with-postgres-skipping-authentication
      - run-specs-with-postgres
      - run-specs-with-mysql
      - solidus-compare
